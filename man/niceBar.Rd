% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/np_niceBar.R
\name{niceBar}
\alias{niceBar}
\title{draw a bar plot}
\usage{
niceBar(x, by = NULL, groupNames = NULL, aggFun = c("mean", "median",
  "none"), errFun = c("sd", "se", "range"), theme = basicTheme,
  legend = FALSE, stack = FALSE, main = NULL, sub = NULL,
  ylab = NULL, minorTick = FALSE, guides = TRUE, outliers = FALSE,
  width = NULL, errorMultiple = 1, plotColors = list(bg = "open",
  fill = setAlpha("grey", 0.8)), logScale = FALSE, trim = FALSE,
  axisText = c(NULL, NULL), showCalc = FALSE, calcType = "none",
  yLim = NULL, rotateLabels = FALSE, rotateY = TRUE, add = FALSE,
  minorGuides = NULL, extendTicks = TRUE, subGroup = FALSE,
  subGroupLabels = NULL, expLabels = FALSE, sidePlot = FALSE,
  errorBars = TRUE, errorCap = "ball", errorLineType = 1,
  capWidth = 1.2, lWidth = 1.5, na.rm = FALSE, flipFacts = FALSE,
  verbose = FALSE, logAdjustment = 1, normalize = FALSE, ...)
}
\arguments{
\item{x}{numeric vector or data frame; The input to \code{prepCategoryWindow} can be a numeric vector a  data frame of numeric vectors.}

\item{by}{factor or data frame of factors; used as the primary grouping factor and the factor levels will be used as group names if \code{groupNames} is not specified. If \code{by} is a data frame and \code{subGroup=\link{TRUE}}, the second column is assumed to be a secondary grouping factor, breaking out the data into sub-categories within each major group determined by the levels of the first column.}

\item{groupNames}{character vector; overrides the factor levels of \code{by} to label the groups}

\item{aggFun}{character; Determines how the data is summarized by factor level. Valid options are \code{mean}, \code{median} or \code{none}.}

\item{errFun}{character; How the data spread is charactarized by the error bars. Valid options are \code{sd} (standard deviation), \code{se} (standard error of the mean) or \code{range}.}

\item{theme}{list object; Themes are are an optional way of storing graphical preset options that are compatible with all nicePlot graphing functions.}

\item{legend}{logical/character; if not equal to \code{\link{FALSE}} with cause a legend to be drawn in the margins. If set to a character string instead of a logical value, the string will be used as the legend title insteas of the factor column name from \code{by}.}

\item{stack}{logical; Should one of the factors in \code{by} be used make a stacked bar plot. Note that this sort of analysis is nonsensical for many data sets.}

\item{main}{character; title for the graph which is supplied to the \code{main} argument.}

\item{sub}{character; subtitle for the graph which is supplied to the \code{sub} argument. If \code{\link{NULL}} and \code{showCalc=\link{TRUE}} it will be used to display the output form \code{\link{calcStats}}.}

\item{ylab}{character; y-axis label.}

\item{minorTick}{positive integer; number of minor tick-marks to draw between each pair of major ticks-marks.}

\item{guides}{logical; will draw guidelines at the major tick-marks if set to \code{\link{TRUE}}. Color of the guidelines is determined by \code{plotColors$guides}.}

\item{outliers}{positive numeric; number of interquartile ranges (IQR) past the Q1 (25\%) and Q3 (75\%) cumulative distribution values. Outliers are often defined as \eqn{1.5 \times IQR} and extreme outliers are more than \eqn{3 \times IQR} away from the inner 50\% data range.}

\item{width}{numeric; cex-like scaling factor controlling the width of the bars.}

\item{errorMultiple}{numeric; How many standard errors/deviations should be represented by the error bars.}

\item{plotColors}{list; a named list of vectors of colors that set the color options for all NicePlot functions. Names left unspecified will be added and set to default values automatically.}

\item{logScale}{positive numeric; the base for the for log scale data transformation calculated as \code{log(x+1,logScale)}.}

\item{trim}{positive numeric; passed to \code{threshold} argument of \code{\link{quantileTrim}} if any data points are so extreme that they should be removed before plotting and downstream analysis. Set to \code{\link{FALSE}} to disable.}

\item{axisText}{character; a length two character vector containing text to be prepended or appended to the major tick labels, respectively.}

\item{showCalc}{logical; if a p-value can be easily calculated for your data, it will be displayed using the \code{sub} annotation setting.}

\item{calcType}{character; should match one of 'none', 'wilcox', 'Tukey','t.test','anova' which will determine which, if any statistical test should be performed on the data.}

\item{yLim}{numeric vector; manually set the limits of the plotting area (eg. \code{yLim=c(min,max)}). Used to format the y-axis by default but will modify the x-axis if \code{side=\link{TRUE}}.}

\item{rotateLabels}{logical; sets \code{las=2} for the x-axis category labels. Will affect y-axis if \code{side=\link{TRUE}}. Note that this may not work well if long names or with subgrouped data.}

\item{rotateY}{logical; sets \code{las=2} for the y-axis major tick-mark labels. Will affect x-axis if \code{side=\link{TRUE}}.}

\item{add}{logical; causes plotting to be added to the existing plot rather the start a new one.}

\item{minorGuides}{logical; draws guidelines at minor tick-marks}

\item{extendTicks}{logical; extends minor tick-marks past the first and last major tick to the edge of the graph provided there is enough room. Works for both log-scale and regular settings.}

\item{subGroup}{logical; use additional column in \code{by} to group the data within each level of the major factor.}

\item{subGroupLabels}{character vector; sets the labels used for the \code{subGroup} factor. Defaults to the levels of the factor.}

\item{expLabels}{logical; prints the major tick labels is \eqn{logScale^{x}}{logScale^x} instead of the raw value}

\item{sidePlot}{logical; switches the axis to plot horizontally instead of vertically.}

\item{errorBars}{Logical; Should error bars be drawn. Defaults to true but is ignored if \code{stack=\link{TRUE}}.}

\item{errorCap}{character; Determines the style for the ends of the error bars. Valid options are \code{ball}, \code{bar} or \code{none}.}

\item{errorLineType}{numeric; Sets \code{lty} line type for drawing the error bars.}

\item{capWidth}{numeric; Controls the cex like scaling of the ball or width of the cap if they are drawn at the end of the error bars for the bar plot.}

\item{lWidth}{numeric; Line width (lwd) for drawing the bar plot.}

\item{na.rm}{logical; Should \code{NA}s be removed from the data set? Both data input and the factor input from \code{by} with be checked.}

\item{flipFacts}{logical; When a dataframe of values is given, column names are used as a secondary grouping factor by default. Setting \code{flipFacts=\link{TRUE}} makes the column names the primary factor and \code{by} the secondary factor.}

\item{verbose}{logical; Prints summary and p-value calculations to the screen. All data is silently by the function returned either way.}

\item{logAdjustment}{= numeric; This number is added to the input data prior to log transformation. Default value is 1.}

\item{normalize}{logical; Normalizes stacked bars to 100\%. If \code{stacked==\link{TRUE}} and \code{normalize==\link{TRUE}} the stacked bars will all go to 100\%. Otherwise the bars represent the cumuative value.}

\item{...}{additional options for S3 method variants.}
}
\description{
Aggregates data from a numeric vector or dataframe using up to three factors to draw a barplot with optional error bars.
}
\details{
This bar plot function allows for standard barplot features but with error bars, the ability
summaryize dataframes into bar plots with median/mean values, sort by bar hight for waterfall plots,
color bars based on interquartile outlier detection and more. Barplots can be clustered by a secondary factor
or if a dataframe is passed to \code{x} the input values of multiple measurments (dataframe columns) can be
clustered together by the primary factor. As with \code{\link{niceBox}}, \code{\link{niceDots}}
and \code{\link{niceVio}}, \code{by} can be a factor or a dataframe factors for forming subgroups.

For most data this would be nonsensical but if you data is say store profits by goods by region one could group by region (first)
}
\examples{
data(mtcars)
Groups<-data.frame(Cyl=factor(mtcars$cyl),Gear=factor(mtcars$gear))
niceBar(mtcars$mpg,by=Groups,subGroup=TRUE,yLim=c(0,45),main="MpG by Cylinders and Gear")

}
\seealso{
\code{\link[vioplot]{vioplot}}, \code{\link{boxplot}}, \code{\link{niceBox}}, \code{\link[beeswarm]{beeswarm}}, \code{\link{prepCategoryWindow}}
}
