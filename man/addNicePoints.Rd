% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NicePlots2.R
\name{addNicePoints}
\alias{addNicePoints}
\title{Add a datapoint overlay to a box or violin plot}
\usage{
addNicePoints(prepedData, by, filter = TRUE, sidePlot = F,
  subGroup = F, plotAt, pointHighlights = F, pointMethod = "jitter",
  pointShape = 16, pointSize = 1, width = 1, pointLaneWidth = 0.9,
  plotColors = formatPlotColors(list(1)), drawPoints = T,
  outliers = F, dataCols = 1, swarmOverflow = "random")
}
\arguments{
\item{prepedData}{list; a list object returned by \code{\link{prepCategoryWindow}}}

\item{by}{factor or dataframe of factors; One or more factors that control how the data is grouped. The first column is the primary grouping factor and the second and thrid columns are used for sub-grouping and highlighting as needed.}

\item{filter}{logical vector; Used to further filter the data if necissary.}

\item{sidePlot}{logical; switches the axis to plot horizontally instead of vertically.}

\item{subGroup}{logical; Should the data be faceted into subgroups within the primary factor levels. Ignored if \code{by} is a \code{\link[base]{factor}}.}

\item{plotAt}{numeric; A vector of where to draw each set of points}

\item{pointHighlights}{logical; will use additional factors in \code{by} to highlight points in the dot plot.}

\item{pointMethod}{character; method to be used for ploting dots. Can be set to "jitter", "linear", "beeswarm" or "distribution".}

\item{pointShape}{positive integer; sets pty for plotting data points. Can be a vector to support additional graphical customization.}

\item{pointSize}{positive integer; sets the cex multiplier for point size.}

\item{width}{numeric; A multiplier that controls how wide the ploting elements will be. Setting \code{width=1.1} would result in plot elements being 10\% wider.}

\item{pointLaneWidth}{numeric; This controls how far data point dots can move along the categorical axis when plotting. Used for \code{pointMethod} options 'jitter', 'beeswarm', and 'distribution'.}

\item{plotColors}{list; a named list of vectors of colors that set the color options for all NicePlot functions. Names left unspecified will be added and set to default values automatically.}

\item{drawPoints}{logical; draws a dot plot overlay of the data for each box. Setting this to false causes just the outlier points to be ploted. Used in \code{\link{niceBox}}.}

\item{outliers}{positive numeric; number of interquartile ranges (IQR) past the Q1 (25\%) and Q3 (75\%) cumulative distribution values. Outliers are often defined as \eqn{1.5 \times IQR}{1.5 * IQR} and extreme outliers are more than \eqn{3 \times IQR}{3 * IQR} away from the inner 50\% data range.}

\item{dataCols}{numeric; A number of representing the number of data columns to be plotted. These is a combination of the dimentions of \code{prepedData} and/or the number of primary and secondary grouping factors. Used to determine the maximum ploting width for the points.}

\item{swarmOverflow}{character; How to handle beeswarms that would normally overflow the \code{pointLaneWidth} argument. Valid options are "random", "gutter", "wrap", "omit", and "none".}
}
\description{
This function prepares data based on settings from \code{\link{niceBox}}, \code{\link{niceDots}}, or \code{\link{niceVio}}
and passes the data on to \code{\link{drawPoints}}.
}
\details{
This funciton takes in cleaned data from \code{\link{prepCategoryWindow}} and reorganizes to to create a dot plot overlay for a graph.
This code is used by both \code{\link{niceBox}} and \code{\link{niceVio}} and has been moved to an independant funciton to make the code more compact and easier to maintain.
This code is also used to draw the outlier dots in a boxplot by setting \code{drawPoints = \link{FALSE}}.
}
\examples{
#Add a beeswarm plot overlay to a boxplot in the iris dataset:
data(iris)
data<-list(data=iris$Sepal.Length)
boxplot(iris$Sepal.Length~iris$Species)
addNicePoints(data,by=iris$Species,pointMethod="beeswarm",plotAt=1:3)

#Add an outlier point to a boxplot:
boxplot(iris$Sepal.Length~iris$Species, outline=FALSE)
addNicePoints(data,by=iris$Species,pointMethod="linear",plotAt=1:3,
    drawPoints=FALSE,outliers=1.5)

}
\seealso{
\code{\link{drawPoints}}, \code{\link{niceBox}}, \code{\link{niceVio}}, \code{\link{niceDots}}, \code{\link[beeswarm]{beeswarm}}, \code{\link[base]{jitter}}, \code{\link{drawPoints}}
}
