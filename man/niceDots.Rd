% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/np_niceDots.R
\name{niceDots}
\alias{niceDots}
\title{draw a dot plot}
\usage{
niceDots(
  x,
  by = NULL,
  groupNames = NULL,
  drawPoints = TRUE,
  errorBars = TRUE,
  barWidth = 0.33,
  barType = c("bar", "dot"),
  barThickness = 2,
  aggFun = c("mean", "median", "none"),
  errFun = c("se", "sd", "range"),
  errorMultiple = 2,
  main = NULL,
  sub = NULL,
  ylab = NULL,
  minorTick = FALSE,
  theme = basicTheme,
  guides = TRUE,
  outliers = 1.5,
  pointSize = 1,
  width = NULL,
  pointShape = NULL,
  plotColors = NULL,
  logScale = FALSE,
  trim = FALSE,
  pointMethod = NULL,
  axisText = c(NULL, NULL),
  showCalc = FALSE,
  calcType = "wilcox",
  yLim = NULL,
  rotateLabels = FALSE,
  rotateY = FALSE,
  add = FALSE,
  minorGuides = NULL,
  extendTicks = TRUE,
  subgroup = FALSE,
  subgroupLabels = NULL,
  highlightLabels = NULL,
  expLabels = TRUE,
  sidePlot = FALSE,
  pointHighlights = FALSE,
  pointLaneWidth = NULL,
  na.rm = FALSE,
  flipFacts = FALSE,
  verbose = FALSE,
  legend = FALSE,
  logAdjustment = 1,
  errorCap = NULL,
  errorLineType = NULL,
  capWidth = NULL,
  lWidth = NULL,
  ...
)
}
\arguments{
\item{x}{numeric vector or data frame; The input to \code{prepCategoryWindow} can be a numeric vector a  data frame of numeric vectors.}

\item{by}{factor or data frame of factors; used as the primary grouping factor and the factor levels will be used as group names if \code{groupNames} is not specified. If \code{by} is a data frame and \code{subgroup=\link{TRUE}}, the second column is assumed to be a secondary grouping factor, breaking out the data into sub-categories within each major group determined by the levels of the first column.}

\item{groupNames}{character vector; overrides the factor levels of \code{by} to label the groups}

\item{drawPoints}{logical; draws a dot plot overlay of the data.}

\item{errorBars}{logical; Determins if the aggregate data and error (if any) is displayed}

\item{barWidth}{numeric; cex like scaling factor for percentage of the column width the \code{mean}/\code{median} bar will span if drawn.}

\item{barType}{character; Indicates the style of the \code{mean}/\code{median} bar. Should be 'dot', 'bar' or 'none'.}

\item{barThickness}{numeric; a cex like multiple for the thickness (\code{lwd}) of the aggregate bar relative to the line width \code{lWidth}.}

\item{aggFun}{character; Determines how the data is summarized by factor level. Valid options are \code{\link[base]{mean}}, \code{\link[stats]{median}}.}

\item{errFun}{character; How the data spread is charactarized by the error bars. Valid options are \code{\link[stats]{sd}} (standard deviation), \code{\link{se}} (standard error of the mean), \code{t95ci} (t-distribution), \code{boot95ci} (\code{\link[boot]{boot}} strap confidence interval) or \code{\link[base]{range}}.}

\item{errorMultiple}{numeric; How many standard errors/deviations should be represented by the error bars. Set to zero to supress error bars.}

\item{main}{character; title for the graph which is supplied to the \code{main} argument.}

\item{sub}{character; subtitle for the graph which is supplied to the \code{sub} argument. If \code{\link{NULL}} and \code{showCalc=\link{TRUE}} it will be used to display the output form \code{\link{calcStats}}.}

\item{ylab}{character; y-axis label.}

\item{minorTick}{positive integer; number of minor tick-marks to draw between each pair of major ticks-marks.}

\item{theme}{list object; Themes are are an optional way of storing graphical preset options that are compatible with all nicePlot graphing functions.}

\item{guides}{logical; will draw guidelines at the major tick-marks if set to \code{\link{TRUE}}. Color of the guidelines is determined by \code{plotColors$guides}.}

\item{outliers}{positive numeric; number of interquartile ranges (IQR) past the Q1 (25\%) and Q3 (75\%) cumulative distribution values. Outliers are often defined as \eqn{1.5 \times IQR}{1.5 * IQR} and extreme outliers are more than \eqn{3 \times IQR}{3 * IQR} away from the inner 50\% data range.}

\item{pointSize}{positive integer; sets the cex multiplier for point size.}

\item{width}{numeric; cex-like scaling factor controlling the width of the width of each category lane.}

\item{pointShape}{positive integer; sets pty for plotting data points. Can be a vector to support additional graphical customization.}

\item{plotColors}{list; a named list of vectors of colors that set the color options for all NicePlot functions. Names left unspecified will be added and set to default values automatically.}

\item{logScale}{positive numeric; the base for the for log scale data transformation calculated as \code{log(x+1,logScale)}.}

\item{trim}{positive numeric; passed to \code{threshold} argument of \code{\link{quantileTrim}} if any data points are so extreme that they should be removed before plotting and downstream analysis. Set to \code{\link{FALSE}} to disable.}

\item{pointMethod}{character; method to be used for ploting dots. Can be set to "jitter", "linear", "beeswarm" or "distribution".}

\item{axisText}{character; a length two character vector containing text to be prepended or appended to the major tick labels, respectively.}

\item{showCalc}{logical; if a p-value can be easily calculated for your data, it will be displayed using the \code{sub} annotation setting.}

\item{calcType}{character; should match one of 'none', 'wilcox', 'Tukey','t.test','anova' which will determine which, if any statistical test should be performed on the data.}

\item{yLim}{numeric vector; manually set the limits of the plotting area (eg. \code{yLim=c(min,max)}). Used to format the y-axis by default but will modify the x-axis if \code{side=\link{TRUE}}.}

\item{rotateLabels}{logical; sets \code{las=2} for the x-axis category labels. Will affect y-axis if \code{side=\link{TRUE}}. Note that this may not work well if long names or with subgrouped data.}

\item{rotateY}{logical; sets \code{las=2} for the y-axis major tick-mark labels. Will affect x-axis if \code{side=\link{TRUE}}.}

\item{add}{logical; causes plotting to be added to the existing plot rather the start a new one.}

\item{minorGuides}{logical; draws guidelines at minor tick-marks}

\item{extendTicks}{logical; extends minor tick-marks past the first and last major tick to the edge of the graph provided there is enough room. Works for both log-scale and regular settings.}

\item{subgroup}{logical; use additional column in \code{by} to group the data within each level of the major factor.}

\item{subgroupLabels}{character vector; sets the labels used for the \code{subgroup} factor. Defaults to the levels of the factor.}

\item{highlightLabels}{character; An optional character vector to override the factor labels associated with point highlights if active.}

\item{expLabels}{logical; prints the major tick labels is \eqn{logScale^{x}}{logScale^x} instead of the raw value}

\item{sidePlot}{logical; switches the axis to plot horizontally instead of vertically.}

\item{pointHighlights}{logical; will use additional factors in \code{by} to highlight points in the dot plot}

\item{pointLaneWidth}{numeric; This controls how far data point dots can spread along the categorical axis when plotting. Used for \code{pointMethod} options 'jitter', 'beeswarm', and 'distribution'.}

\item{na.rm}{logical; Should \code{NA}s be removed from the data set? Both data input and the factor input from \code{by} with be checked.}

\item{flipFacts}{logical; When a dataframe of values is given, column names are used as a secondary grouping factor by default. Setting \code{flipFacts=\link{TRUE}} makes the column names the primary factor and \code{by} the secondary factor.}

\item{verbose}{logical; Prints summary and p-value calculations to the screen. All data is silently by the function returned either way.}

\item{legend}{logical/character; if not equal to \code{\link{FALSE}} with cause a legend to be drawn in the margins. If set to a character string instead of a logical value, the string will be used as the legend title insteas of the factor column name from \code{by}.}

\item{logAdjustment}{= numeric; This number is added to the input data prior to log transformation. Default value is 1.}

\item{errorCap}{character; Determines the style for the ends of the error bars. Valid options are '\code{ball}', '\code{bar}' or '\code{none}'.}

\item{errorLineType}{numeric; Sets \code{lty} line type for drawing the error bars.}

\item{capWidth}{numeric; Controls the cex like scaling of the ball or width of the cap if they are drawn at the end of the error bars for the bar plot.}

\item{lWidth}{numeric; Line width (\code{lwd}) for drawing the \code{mean}/\code{median} bars and errorbars.}

\item{...}{additional options for S3 method variants.}
}
\description{
draws a categorical dot plot with optional data highlighting, log scale support and optional mean/median/distribution overlays.
}
\details{
This is really two different plotting functions merged together. First, the data points can be plotted individually using a \code{distribution} waterfall, \code{jitter}, \code{beeswarm}, just \code{linear} or not plotted at all.
A signle data vector can be subset (eg using multiple factors with \code{by} and optionally \code{subgroup==\link{TRUE}}) using up to two factors. If a multi-column tibble, matrix or dataframe is used for data input, then can be grouped by a single factor from \code{by} with the column names used for factor subgroups.
The option \code{flipFacts} can be used in this case to make the data columns the primary grouping factor and the first factor in \code{by} used for subgroups.
On top of this, the \code{\link[base]{mean}}/\code{\link[stats]{median}} values can be overplotted using \code{errorBars==\link{TRUE}} and error or distribution (eg. \code{\link[stats]{sd}}, \code{\link{se}} \code{\link[base]{range}}, etc.) can be also be shown as errorbars. The error bars can be multiplied by \code{errorMultiple} and supressed if \code{errorMultiple=0}.

The complicated part of using this function is handling its many options. A wrapper function to set up and run it with preset options may be a good idea if you are using it alot.
Briefly put, the \code{by} argument can be a data frame of factors and the function will  work through the columns in order as needed.
If \code{x} is a numeric vector, then \code{by} should be a factor to group it into categories. If \code{by} is a data frame of factors and \code{subgroup=\link{TRUE}}, then the first column for \code{by}
is used as the grouping factor and the second column is used as the sub-grouping factor. If \code{pointHighlights=\link{TRUE}}, and \code{subgroup=\link{TRUE}}, the the third column of \code{by}
is used to highlight points data point overlay (assuming \code{drawPoints=\link{TRUE}}). If \code{subgroup=\link{FALSE}} and \code{subgroup=\link{TRUE}}, then the second column of \code{by} is used to control
the point highlighting. If \code{x} itself is a data frame of numeric vectors, \code{subgroup} is automatically set to false and each column of \code{x} is plotted like a sub-group and grouped
by the first column of \code{by}. Data point highlighting with \code{pointHighlights=\link{TRUE}} can still be used when \code{x} is a data frame and the highlighting factor will be drawn from the second column of \code{by}.
Please note that the p-values can not always be calculated and are for general exploratory use only. More careful analysis is necessary to determine statistical significance.
This function is as S3 generic and can be extended to provide class specific functionality.
To further facilitate data exploration, outputs from statistical testing and data set summaries
are printed to the console if \code{verbose=\link{TRUE}}.
}
\examples{
data(iris)
mCols<-makeColorMatrix()
myCols<-list(fill=mCols[1:3,3],lines="darkblue")
niceDots(iris$Sepal.Length,iris$Species,minorTick=4,showCalc=TRUE,calcType="anova",
    ylab="Sepal Length",main="Sepal Length by Species",plotColors=myCols)

}
\seealso{
\code{\link[graphics]{stripchart}}, \code{\link[beeswarm]{beeswarm}}, \code{\link{quantileTrim}}, \code{\link{prepCategoryWindow}}, \code{\link[base]{jitter}}
}
