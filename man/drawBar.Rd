% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/np_plotting_functions.R
\name{drawBar}
\alias{drawBar}
\title{drawBar}
\usage{
drawBar(
  x,
  plotColors,
  errorBars = FALSE,
  errorCap = "ball",
  errorLineType = 1,
  width = 0.5,
  sidePlot = FALSE,
  stacked = FALSE,
  capSize = 2,
  lineWidth = 1,
  normalize = FALSE,
  logScale = FALSE,
  logAdjustment = 1
)
}
\arguments{
\item{x}{dataframe; number of interquartile ranges (IQR) past the Q1 (25\%) and Q3 (75\%) cumulative distribution values. Outliers are often defined as \eqn{1.5 \times IQR}{1.5 * IQR} and extreme outliers are more than \eqn{3 \times IQR}{3 * IQR} away from the inner 50\% data range.}

\item{plotColors}{list; a named list of vectors of colors that set the color options for all NicePlot functions. Names left unspecified will be added and set to default values automatically.}

\item{errorBars}{Logical; Should error bars be drawn. Defaults to true but is ignored if \code{stack=\link{TRUE}}.}

\item{errorCap}{character; Determines the style for the ends of the error bars. Valid options are \code{ball}, \code{bar} or \code{none}.}

\item{errorLineType}{numeric; Sets \code{lty} line type for drawing the error bars.}

\item{width}{numeric; cex like scaling factor controlling the width of the bars.}

\item{sidePlot}{logical; Plots bar hight on the x axis if set to \code{\link{TRUE}}.}

\item{stacked}{logical; draws a stacked barplot if set to \code{\link{TRUE}}.}

\item{capSize}{numeric; cex like scaling value the controls the size of the caps on the error bars.}

\item{lineWidth}{numeric; Sets the \code{lwd} options for controling line plotting thickness for the bar plot.}

\item{normalize}{logical; Normalizes stacked bars to 100\%. If \code{stacked==\link{TRUE}} and \code{normalize==\link{TRUE}} the stacked bars will all go to 100\%. Otherwise the bars represent the cumuative value.}

\item{logScale}{numeric; the logarithm base to use for the log scale transformation.}

\item{logAdjustment}{numeric; a number added to each value prior to log trasformation. Defaults value is 1.}
}
\description{
Add a barplot with options error pars to the active ploting enviroment
}
\details{
This function draws a series of bars based on a dataframe. The expected columns include \code{yt} (locaion top of the bar),
\code{yb} or bottom of the bar, \code{at} indicating where the bar should be drawn, \code{Group} which is a unique ID per row, \code{fact} which contains an optional stacking factor
\code{UpperError} for the top of the error bar and \code{LowerError} for the location of the bottom of the error bar. The construction of the dataframe is handled automatically from input data
by \code{\link{niceBar}}.
}
\examples{
data(iris)
library(dplyr)
data<-iris  \%>\% group_by(Species) \%>\%
    summarize(yt=mean(Sepal.Length),yb=0,UpperError=sd(Sepal.Length),
    LowerError=sd(Sepal.Length)) \%>\%
    ungroup() \%>\% select(yt,yb,UpperError,LowerError,Group=Species) \%>\%
    bind_cols(at=1:3,fact=1:3)
plot(type="n",xlim=c(0,4),ylim=c(0,max(iris$Sepal.Length)),-1,xaxt="n")
# drawBar(data,plotColors=list())

}
\seealso{
\code{\link[graphics]{barplot}}, \code{\link{niceBar}}, \code{\link{errorBars}}
}
